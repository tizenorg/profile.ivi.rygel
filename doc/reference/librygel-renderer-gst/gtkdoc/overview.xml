<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>

<section id="overview">

<para>
librygel-renderer-gst is part of the <ulink url="http://rygel-project.org/">Rygel</ulink> project.
</para>

<para>
This library may be used to create UPnP or DLNA Renderers using GStreamer.
The <link linkend="RygelPlaybinRenderer">RygelPlaybinRenderer</link> may
wrap an existing GStreamer playbin or create its own. See the 
<link linkend="example">example</link>.
</para>

<para>
librygel-renderer-gst is licensed under the GNU Lesser General Public License (LGPL).
</para>


<sect1 id="basic-usage">
<title>Basic Usage</title>
<para>
Include the header:
</para>
<para>
<programlisting>
#include &lt;rygel-renderer-gst.h&gt;
</programlisting>
</para>

<para>
If your source file is program.c, you can compile it with:
</para>
<para>
<command>
gcc program.cc -o program `pkg-config --cflags --libs rygel-renderer-gst-2.0`
</command>
</para>

<para>
Alternatively, if using autoconf, use the following in configure.ac:
</para>
<para>
<programlisting>
PKG_CHECK_MODULES([DEPS], [rygel-renderer-gst-2.0])
</programlisting>
</para>

<para>
Then use the generated DEPS_CFLAGS and DEPS_LIBS variables in the project Makefile.am files. For example:
</para>
<para>
<programlisting>
program_CPPFLAGS = $(DEPS_CFLAGS)
program_LDADD = $(DEPS_LIBS)
</programlisting>
</para>

</sect1>

</section>
